version: "3.7"

services:

  app:
    # Uncomment this line to use the official registrar base image
    # image: edxops/registrar:devstack
    build:
      context: "."
    image: openedx/registrar
    container_name: edx.devstack.registrar
    hostname: app.registrar
    volumes:
      - .:/edx/app/registrar
      - ../src:/edx/src:cached
    ports:
      - "18734:18734"
    depends_on:
      - discovery
      - worker
      - lms
      - mysql
    # Allows attachment to this container using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    environment:
      CELERY_ALWAYS_EAGER: 'false'
      CELERY_BROKER_TRANSPORT: redis
      CELERY_BROKER_HOSTNAME: edx.devstack.redis:6379
      CELERY_BROKER_VHOST: 0
      CELERY_BROKER_PASSWORD: password
      DJANGO_SETTINGS_MODULE: registrar.settings.devstack
      #TODO: enable django debug toolbar

  worker:
    # Uncomment this line to use the official catalog base image
    # image: edxops/registrar:devstack
    build:
      context: "."
    image: openedx/registrar
    #!/usr/bin/env bash
    command: bash -c 'cd /edx/app/registrar && celery -A registrar worker -l DEBUG'
    container_name: edx.devstack.registrar-worker
    depends_on:
      - discovery
      - lms
      - mysql
    environment:
      CELERY_ALWAYS_EAGER: 'false'
      CELERY_BROKER_TRANSPORT: redis
      CELERY_BROKER_HOSTNAME: edx.devstack.redis:6379
      CELERY_BROKER_VHOST: 0
      CELERY_BROKER_PASSWORD: password
      DJANGO_SETTINGS_MODULE: registrar.settings.devstack
    hostname: worker.registrar
    ports:
      - "18735:18735"
    restart: always
    # Allows attachment to this container using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    volumes:
      - .:/edx/app/registrar

  discovery:
    container_name: edx.devstack.discovery
    hostname: discovery.devstack.edx
    depends_on:
      - mysql
      - elasticsearch
      - memcached
    stdin_open: true
    tty: true
    environment:
      TEST_ELASTICSEARCH_URL: http://edx.devstack.elasticsearch:9200
      DJANGO_WATCHMAN_TIMEOUT: 30
    image: kdmccormick96/course-discovery:latest
    ports:
      - "18381:18381"
    volumes:
      - discovery_assets:/edx/var/discovery/

  elasticsearch:
    container_name: edx.devstack.elasticsearch
    hostname: elasticsearch.devstack.edx
    image: edxops/elasticsearch:devstack
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - elasticsearch_data:/usr/share/elasticsearch/logs

  lms:
    container_name: edx.devstack.lms
    hostname: lms.devstack.edx
    depends_on:
      - mysql
      - memcached
      - mongo
    stdin_open: true
    tty: true
    environment:
      NO_INSTALL_PREREQS: 1
      DJANGO_WATCHMAN_TIMEOUT: 30
    image: kdmccormick96/edx-platform:latest
    ports:
      - "18000:18000"
    volumes:
      - edxapp_lms_assets:/edx/var/edxapp/staticfiles/

  memcached:
    container_name: edx.devstack.memcached
    hostname: memcached.devstack.edx
    image: memcached:1.5.10-alpine

  mongo:
    # We use WiredTiger in all environments. In development environments we use small files
    # to conserve disk space, and disable the journal for a minor performance gain.
    # See https://docs.mongodb.com/v3.0/reference/program/mongod/#options for complete details.
    command: mongod --smallfiles --nojournal --storageEngine wiredTiger
    container_name: edx.devstack.mongo
    hostname: mongo.devstack.edx
    image: mongo:${MONGO_VERSION:-3.6.17}
    volumes:
      - mongo_data:/data/db
      - ./lms_mongo_dump:/data/dump

  mysql:
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    container_name: edx.devstack.mysql
    hostname: mysql.devstack.edx
    environment:
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    image: mysql:5.6
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    command: redis-server --requirepass password
    container_name: edx.devstack.redis
    hostname: redis.devstack.edx
    image: redis:2.8

volumes:
  edxapp_lms_assets:
  discovery_assets:
  elasticsearch_data:
  mysql_data:
  mongo_data:

